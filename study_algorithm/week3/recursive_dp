2. 코딩테스트에서 재귀 vs DP 언제 써야 할까?
✅ 재귀만 써도 되는 경우
문제 크기가 매우 작을 때 (N ≤ 20~30 정도)

단순한 완전탐색/브루트포스 문제 (모든 경우를 다 봐야 할 때)

백트래킹 문제 (예: 조합, 순열, N-Queen 등)

트리 탐색(DFS), 그래프 탐색(DFS/BFS)에서 구조상 자연스러운 경우

예시:

부분집합 만들기

순열 만들기

트리 순회

✅ 빠르게 코드를 짜야 하고, 재귀 깊이가 얕을 때

✅ 꼭 DP를 써야 하는 경우
"부분 문제"가 중복되는 경우 (피보나치, 계단 오르기, 동전 문제 등)

문제 크기가 커서 (N ≥ 1000, 10000, 100000) 재귀만 쓰면 터지는 경우

최적해(최댓값, 최솟값 등)를 구하라고 할 때

시간 제한이 빡빡할 때 (보통 1초 안에 O(N)이나 O(NlogN) 맞춰야 함)

예시:

피보나치 수열 (N=10만)

최장 증가 부분 수열 (LIS)

0-1 배낭 문제 (Knapsack)

✅ 시간복잡도 최적화가 필요할 때 반드시 DP 사용

📈 요약 비교

상황	재귀	DP (Top-Down or Bottom-Up)
문제 크기 작음	가능 (빠르고 쉬움)	가능하지만 오버킬
중복 계산 없음	추천	불필요
중복 계산 있음	비효율적 (시간초과 가능)	필수
최적해(최댓값, 최솟값) 문제	보통 비효율	꼭 필요